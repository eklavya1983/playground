Zookeeper
-sessions are maintained on server side.  When client is partitioned, client isn't notified of session expiration.  It's disconnected.  Once it connects back in, session is expired.

FBThrift
Cpp2Worker
-Implements Acceptor which has callbacks around when a connection is created etc.
-Manages bunch of cpp2 connections
-Is associated with IOThreadPoolExecutor thread. Cpp2Worker uses thread handle event base.

Cpp2Connection
-Connec

ThriftServer
-Io threadpool - Manages reading/writing from connetions
-Cpp2Worker pool - pool of workers.  One worker per io thread in io threadpool.  Workers added in
 ThreadPoolExecutor::Observer::threadStarted()
-thread manager - For sync calls, stuff gets xferred from io threadpool to thread manager

Accepting connetions
-Acceptor::connectionReady
-Cpp2Worker::onNewConnection

Cpp2Worker creation
#0  apache::thrift::ThriftAcceptorFactory::newAcceptor (this=this@entry=0x8dc008,
    eventBase=0x7fffe00009f0) at server/ThriftServer.cpp:92
#1  0x00007ffff71a992b in folly::ServerWorkerPool::threadStarted (this=0x8dca48, h=0x8db250)
    at wangle/bootstrap/ServerBootstrap.cpp:25
#2  0x00007ffff71bd1d1 in folly::wangle::ThreadPoolExecutor::addObserver (this=<optimized out>,
    o=...) at wangle/concurrent/ThreadPoolExecutor.cpp:183
#3  0x00007ffff78c31db in folly::ServerBootstrap<folly::wangle::ChannelPipeline<folly::IOBufQueue&, std::unique_ptr<folly::IOBuf, std::default_delete<folly::IOBuf> >> >::group(std::shared_ptr<folly::wangle::IOThreadPoolExecutor>, std::shared_ptr<folly::wangle::IOThreadPoolExecutor>) (
    this=this@entry=0x8d9148, accept_group=..., io_group=...)
    at /home/nbayyana/playground/cpp/test_fbthrift/fbthrift/thrift/folly/folly/wangle/bootstrap/ServerBootstrap.h:144
#4  0x00007ffff78b98d1 in apache::thrift::ThriftServer::setup (this=this@entry=0x8d90e0)
    at server/ThriftServer.cpp:326
#5  0x00007ffff78ba04e in apache::thrift::ThriftServer::serve (this=0x8d90e0)
    at server/ThriftServer.cpp:369

New connection bt
#0  apache::thrift::Cpp2Worker::onNewConnection (this=0x7fffe00045d8, sock=..., addr=0x7fffee4f29d0,
    nextProtocolName=..., tinfo=...) at server/Cpp2Worker.cpp:57
#1  0x00007ffff6de952e in folly::Acceptor::connectionReady (this=this@entry=0x7fffe00045d8,
    sock=..., clientAddr=..., nextProtocolName=..., tinfo=...) at wangle/acceptor/Acceptor.cpp:343
#2  0x00007ffff6de9d5c in folly::Acceptor::processEstablishedConnection (this=0x7fffe00045d8,
    fd=<optimized out>, clientAddr=..., acceptTime=..., tinfo=...)
    at wangle/acceptor/Acceptor.cpp:328
#3  0x00007ffff6dea0e8 in folly::Acceptor::onDoneAcceptingConnection (this=<optimized out>,
    fd=<optimized out>, clientAddr=..., acceptTime=...) at wangle/acceptor/Acceptor.cpp:293
#4  0x00007ffff6de8d6c in folly::Acceptor::connectionAccepted (this=0x7fffe00045d8, fd=40,
    clientAddr=...) at wangle/acceptor/Acceptor.cpp:285
#5  0x00007ffff6d6e39c in folly::AsyncServerSocket::RemoteAcceptor::messageAvailable(folly::AsyncServerSocket::QueueMessage&&) (this=0x7fffbc001cf0, msg=<optimized out>)
    at io/async/AsyncServerSocket.cpp:94
#6  0x00007ffff6d74915 in folly::NotificationQueue<folly::AsyncServerSocket::QueueMessage>::Consumer::consumeMessages (this=0x7fffbc001cf0, isDrain=false) at ./../folly/io/async/NotificationQueue.h:660
#7  0x00007ffff3717f24 in event_base_loop () from /usr/lib/x86_64-linux-gnu/libevent-2.0.so.5
#8  0x00007ffff6d89cd6 in folly::EventBase::loopBody (this=this@entry=0x7fffd4000b00,
    flags=flags@entry=0) at io/async/EventBase.cpp:333
#9  0x00007ffff6d89f77 in folly::EventBase::loop (this=this@entry=0x7fffd4000b00)
    at io/async/EventBase.cpp:284
#10 0x00007ffff6d8a7ba in folly::EventBase::loopForever (this=0x7fffd4000b00)
    at io/async/EventBase.cpp:432
#11 0x00007ffff6dfa2e9 in folly::wangle::IOThreadPoolExecutor::threadRun (this=0x7f8830, thread=...)

Request received
#0  apache::thrift::Cpp2Connection::requestReceived(std::unique_ptr<apache::thrift::ResponseChannel::Request, std::default_delete<apache::thrift::ResponseChannel::Request> >&&) (this=0x7fffd4001970,
    req=<unknown type in /home/nbayyana/playground/cpp/test_fbthrift/fbthrift/thrift/lib/cpp2/.libs/libthriftcpp2.so.24, CU 0x5602e6, DIE 0x5dd3a2>) at server/Cpp2Connection.cpp:253
#1  0x00007ffff7959df2 in apache::thrift::HeaderServerChannel::__lambda54::operator() (
    __closure=0x7fffee4f2690) at async/HeaderServerChannel.cpp:364
#2  0x00007ffff795be92 in folly::try_and_catch<>::call_fn<apache::thrift::HeaderServerChannel::messageReceived(std::unique_ptr<folly::IOBuf>&&, std::unique_ptr<apache::thrift::MessageChannel::RecvCallback
::sample>)::__lambda54>(<unknown type in /home/nbayyana/playground/cpp/test_fbthrift/fbthrift/thrift/lib/cpp2/.libs/libthriftcpp2.so.24, CU 0x7da82, DIE 0xdfdbd>) (this=0x7fffee4f26a0,
    fn=<unknown type in /home/nbayyana/playground/cpp/test_fbthrift/fbthrift/thrift/lib/cpp2/.libs/libthriftcpp2.so.24, CU 0x7da82, DIE 0xdfdbd>)
    at /home/nbayyana/playground/cpp/test_fbthrift/fbthrift/thrift/folly/folly/ExceptionWrapper.h:442
#3  0x00007ffff795bd95 in folly::try_and_catch<std::exception>::call_fn<apache::thrift::HeaderServerChannel::messageReceived(std::unique_ptr<folly::IOBuf>&&, std::unique_ptr<apache::thrift::MessageChannel
::RecvCallback::sample>)::__lambda54&>(apache::thrift::HeaderServerChannel::__lambda54 &) (
    this=0x7fffee4f26a0, fn=...)
    at /home/nbayyana/playground/cpp/test_fbthrift/fbthrift/thrift/folly/folly/ExceptionWrapper.h:423
#4  0x00007ffff795bba8 in folly::try_and_catch<std::exception>::try_and_catch<apache::thrift::HeaderServerChannel::messageReceived(std::unique_ptr<folly::IOBuf>&&, std::unique_ptr<apache::thrift::MessageC
hannel::RecvCallback::sample>)::__lambda54>(<unknown type in /home/nbayyana/playground/cpp/test_fbthrift/fbthrift/thrift/lib/cpp2/.libs/libthriftcpp2.so.24, CU 0x7da82, DIE 0xd877b>) (
    this=0x7fffee4f26a0,
    fn=<unknown type in /home/nbayyana/playground/cpp/test_fbthrift/fbthrift/thrift/lib/cpp2/.libs/libthriftcpp2.so.24, CU 0x7da82, DIE 0xd877b>)
    at /home/nbayyana/playground/cpp/test_fbthrift/fbthrift/thrift/folly/folly/ExceptionWrapper.h:399
#5  0x00007ffff795a15b in apache::thrift::HeaderServerChannel::messageReceived(std::unique_ptr<folly::IOBuf, std::default_delete<folly::IOBuf> >&&, std::unique_ptr<apache::thrift::MessageChannel::RecvCall
back::sample, std::default_delete<apache::thrift::MessageChannel::RecvCallback::sample> >) (
    this=0x7fffd4001b70,
    buf=<unknown type in /home/nbayyana/playground/cpp/test_fbthrift/fbthrift/thrift/lib/cpp2/.libs/libthriftcpp2.so.24, CU 0x7da82, DIE 0xd0836>, sample=...) at async/HeaderServerChannel.cpp:365
#6  0x00007ffff799a14f in apache::thrift::Cpp2Channel::read (this=0x7fffd4001d20,
    ctx=0x7fffd4002110, q=...) at async/Cpp2Channel.cpp:179
#7  0x00007ffff79aba86 in folly::wangle::ChannelHandlerPtr<apache::thrift::Cpp2Channel, false>::read
    (this=0x7fffd4002138, ctx=0x7fffd4002110, msg=...)
    at /home/nbayyana/playground/cpp/test_fbthrift/fbthrift/thrift/folly/folly/wangle/channel/ChannelHandler.h:168
#8  0x00007ffff79ab714 in folly::wangle::ContextImpl<folly::wangle::ChannelPipeline<folly::IOBufQueue&, std::unique_ptr<folly::IOBuf, std::default_delete<folly::IOBuf> >, folly::wangle::ChannelHandlerPtr<
apache::thrift::Cpp2Channel, false> >, folly::wangle::ChannelHandlerPtr<apache::thrift::Cpp2Channel, false> >::read (this=0x7fffd4002110, msg=...)
    at /home/nbayyana/playground/cpp/test_fbthrift/fbthrift/thrift/folly/folly/wangle/channel/ChannelHandlerContext.h:221
---Type <return> to continue, or q <return> to quit---
#9  0x00007ffff79aa2f4 in folly::wangle::ContextImpl<folly::wangle::ChannelPipeline<folly::IOBufQueue&, std::unique_ptr<folly::IOBuf, std::default_delete<folly::IOBuf> >, apache::thrift::TAsyncTransportHa
ndler, folly::wangle::ChannelHandlerPtr<apache::thrift::Cpp2Channel, false> >, apache::thrift::TAsyncTransportHandler>::fireRead (this=0x7fffd4002188, msg=...)
    at /home/nbayyana/playground/cpp/test_fbthrift/fbthrift/thrift/folly/folly/wangle/channel/ChannelHandlerContext.h:152
#10 0x00007ffff799f76b in apache::thrift::TAsyncTransportHandler::readDataAvailable (
    this=0x7fffd40021b0, len=30) at ../../../thrift/lib/cpp2/async/TAsyncTransportHandler.h:117
#11 0x00007ffff6d7c62c in folly::AsyncSocket::handleRead (this=0x7fffd4001788)
    at io/async/AsyncSocket.cpp:1283
#12 0x00007ffff6d7806a in folly::AsyncSocket::ioReady (this=0x7fffd4001788, events=2)
    at io/async/AsyncSocket.cpp:1184
#13 0x00007ffff3717f24 in event_base_loop () from /usr/lib/x86_64-linux-gnu/libevent-2.0.so.5
#14 0x00007ffff6d89cd6 in folly::EventBase::loopBody (this=this@entry=0x7fffd4000b00,
    flags=flags@entry=0) at io/async/EventBase.cpp:333
#15 0x00007ffff6d89f77 in folly::EventBase::loop (this=this@entry=0x7fffd4000b00)


Serialization notes:
Serializtion
ConfigApi_client.cpp: 	ConfigApiAsyncClient::registerService
ConfigApi.tcc: 		ConfigApiAsyncClient::registerServiceT
apache::thrift::BinaryProtocolWriter prot;
folly::IOBufQueue queue(folly::IOBufQueue::cacheChainLength());
prot->setOutput(&queue, bufSize);
args.write(prot);
this->channel_->sendRequest(rpcOptions, std::move(callback), std::move(ctx), queue.move());
HeaderClientChannel::sendRequest()
Cpp2Channel::sendMessage()
FramingChannelHandler::addFrame()
Pipeline::write();


Deserialization
ConfigApiAsyncProcessor::process()
AsyncProcessor.h:
ConfigApiAsyncProcessor::process_registerService
GeneratedAsyncProcessor::deserializeRequest()
deserilization codepath ex:
ConfigApiAsyncProcessor::process_registerService() -> deserializeRequest(args, buf.get(), iprot.get(), c.get());


cpp2server.cpp
-has information about parameterizing thrift server
